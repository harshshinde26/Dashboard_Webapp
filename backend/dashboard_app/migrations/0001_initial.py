# Generated by Django 5.2.4 on 2025-07-31 02:39

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('code', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='BatchSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('schedule_name', models.CharField(max_length=200)),
                ('job_name', models.CharField(max_length=200)),
                ('schedule_pattern', models.CharField(max_length=100)),
                ('next_run_time', models.DateTimeField()),
                ('last_run_time', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive'), ('SUSPENDED', 'Suspended'), ('MAINTENANCE', 'Under Maintenance')], default='ACTIVE', max_length=20)),
                ('priority', models.IntegerField(default=1)),
                ('dependencies', models.TextField(blank=True)),
                ('file_path', models.CharField(max_length=500)),
                ('file_name', models.CharField(max_length=200)),
                ('file_size', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='batch_schedules', to='dashboard_app.customer')),
            ],
            options={
                'ordering': ['priority', 'next_run_time'],
                'indexes': [models.Index(fields=['customer', 'status'], name='dashboard_a_custome_832ea2_idx'), models.Index(fields=['next_run_time'], name='dashboard_a_next_ru_a7368b_idx')],
            },
        ),
        migrations.CreateModel(
            name='BatchJob',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_name', models.CharField(max_length=200)),
                ('job_id', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('COMPLETED_NORMAL', 'Completed Normally'), ('COMPLETED_ABNORMAL', 'Completed Abnormally'), ('COMPLETED_NORMAL_STAR', 'Completed Normally*'), ('LONG_RUNNING', 'Long Running'), ('FAILED', 'Failed'), ('PENDING', 'Pending')], max_length=50)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('duration_minutes', models.FloatField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('month', models.CharField(max_length=7)),
                ('year', models.IntegerField()),
                ('is_long_running', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='batch_jobs', to='dashboard_app.customer')),
            ],
            options={
                'ordering': ['-start_time'],
                'indexes': [models.Index(fields=['customer', 'month'], name='dashboard_a_custome_ba5af0_idx'), models.Index(fields=['status'], name='dashboard_a_status_1395f5_idx'), models.Index(fields=['start_time'], name='dashboard_a_start_t_c9b42d_idx')],
            },
        ),
        migrations.CreateModel(
            name='FileUpload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_type', models.CharField(choices=[('BATCH_PERFORMANCE', 'Batch Performance'), ('VOLUMETRICS', 'Volumetrics'), ('SLA_TRACKING', 'SLA Tracking'), ('BATCH_SCHEDULE', 'Batch Schedule')], max_length=50)),
                ('file_name', models.CharField(max_length=200)),
                ('file_path', models.CharField(max_length=500)),
                ('file_size', models.IntegerField()),
                ('upload_date', models.DateTimeField(auto_now_add=True)),
                ('processed', models.BooleanField(default=False)),
                ('processing_log', models.TextField(blank=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='file_uploads', to='dashboard_app.customer')),
                ('uploaded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-upload_date'],
                'indexes': [models.Index(fields=['customer', 'file_type'], name='dashboard_a_custome_b04ad0_idx'), models.Index(fields=['processed'], name='dashboard_a_process_60a452_idx')],
            },
        ),
        migrations.CreateModel(
            name='SLAData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_name', models.CharField(max_length=200)),
                ('date', models.DateField()),
                ('sla_target_minutes', models.FloatField()),
                ('actual_runtime_minutes', models.FloatField()),
                ('sla_status', models.CharField(choices=[('MET', 'SLA Met'), ('MISSED', 'SLA Missed'), ('AT_RISK', 'At Risk'), ('UNKNOWN', 'Unknown')], max_length=20)),
                ('variance_minutes', models.FloatField()),
                ('variance_percentage', models.FloatField()),
                ('business_impact', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sla_data', to='dashboard_app.customer')),
            ],
            options={
                'ordering': ['-date'],
                'indexes': [models.Index(fields=['customer', 'date'], name='dashboard_a_custome_ee73d8_idx'), models.Index(fields=['sla_status'], name='dashboard_a_sla_sta_584b6c_idx')],
                'unique_together': {('customer', 'job_name', 'date')},
            },
        ),
        migrations.CreateModel(
            name='VolumetricData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_name', models.CharField(max_length=200)),
                ('date', models.DateField()),
                ('total_volume', models.IntegerField()),
                ('total_runtime_minutes', models.FloatField()),
                ('records_processed_per_minute', models.FloatField()),
                ('peak_volume', models.IntegerField(blank=True, null=True)),
                ('average_volume', models.FloatField(blank=True, null=True)),
                ('peak_runtime', models.FloatField(blank=True, null=True)),
                ('average_runtime', models.FloatField(blank=True, null=True)),
                ('min_performance', models.FloatField(blank=True, null=True)),
                ('max_performance', models.FloatField(blank=True, null=True)),
                ('processing_efficiency', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='volumetric_data', to='dashboard_app.customer')),
            ],
            options={
                'ordering': ['-date'],
                'indexes': [models.Index(fields=['customer', 'date'], name='dashboard_a_custome_b1fdcf_idx'), models.Index(fields=['job_name'], name='dashboard_a_job_nam_5580a3_idx')],
                'unique_together': {('customer', 'job_name', 'date')},
            },
        ),
    ]
