# Generated by Django 5.2.4 on 2025-08-06 07:28

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('dashboard_app', '0011_alter_customer_code_alter_customer_name_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PredictionModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prediction_type', models.CharField(choices=[('FAILURE', 'Job Failure Prediction'), ('LONG_RUNNER', 'Long Running Job Prediction'), ('SLA_MISS', 'SLA Miss Prediction'), ('HIGH_VOLUME', 'High Volume Prediction')], max_length=20)),
                ('job_name', models.CharField(blank=True, help_text='Specific job or empty for all jobs', max_length=200)),
                ('lookback_days', models.IntegerField(default=30, help_text='Days of historical data to analyze')),
                ('confidence_threshold', models.FloatField(default=0.7, help_text='Minimum confidence for predictions')),
                ('accuracy', models.FloatField(blank=True, help_text='Model accuracy percentage', null=True)),
                ('precision', models.FloatField(blank=True, null=True)),
                ('recall', models.FloatField(blank=True, null=True)),
                ('f1_score', models.FloatField(blank=True, null=True)),
                ('last_trained', models.DateTimeField(blank=True, null=True)),
                ('training_data_points', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prediction_models', to='dashboard_app.customer')),
            ],
            options={
                'verbose_name': 'Prediction Model',
                'verbose_name_plural': 'Prediction Models',
                'ordering': ['-updated_at'],
                'unique_together': {('customer', 'prediction_type', 'job_name')},
            },
        ),
        migrations.CreateModel(
            name='PredictionResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_name', models.CharField(max_length=200)),
                ('predicted_date', models.DateField()),
                ('prediction_confidence', models.FloatField(help_text='Confidence score 0-1')),
                ('risk_level', models.CharField(choices=[('LOW', 'Low Risk'), ('MEDIUM', 'Medium Risk'), ('HIGH', 'High Risk'), ('CRITICAL', 'Critical Risk')], max_length=10)),
                ('predicted_failure_probability', models.FloatField(blank=True, null=True)),
                ('predicted_duration_minutes', models.FloatField(blank=True, null=True)),
                ('predicted_sla_miss_probability', models.FloatField(blank=True, null=True)),
                ('predicted_volume', models.IntegerField(blank=True, null=True)),
                ('contributing_factors', models.JSONField(default=dict, help_text='Factors contributing to this prediction')),
                ('historical_patterns', models.JSONField(default=dict, help_text='Historical patterns that support this prediction')),
                ('actual_outcome_known', models.BooleanField(default=False)),
                ('prediction_accurate', models.BooleanField(blank=True, null=True)),
                ('actual_value', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('prediction_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='dashboard_app.predictionmodel')),
            ],
            options={
                'ordering': ['-predicted_date', '-prediction_confidence'],
            },
        ),
        migrations.CreateModel(
            name='PredictionAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alert_type', models.CharField(choices=[('FAILURE_WARNING', 'Job Failure Warning'), ('LONG_RUNNER_WARNING', 'Long Running Job Warning'), ('SLA_MISS_WARNING', 'SLA Miss Warning'), ('VOLUME_SPIKE_WARNING', 'High Volume Warning')], max_length=30)),
                ('severity', models.CharField(choices=[('INFO', 'Information'), ('WARNING', 'Warning'), ('CRITICAL', 'Critical'), ('URGENT', 'Urgent')], max_length=10)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('ACKNOWLEDGED', 'Acknowledged'), ('RESOLVED', 'Resolved'), ('EXPIRED', 'Expired')], default='ACTIVE', max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('recommended_actions', models.TextField(blank=True)),
                ('alert_date', models.DateTimeField(auto_now_add=True)),
                ('predicted_impact_date', models.DateField()),
                ('expiry_date', models.DateTimeField(blank=True, null=True)),
                ('acknowledged_at', models.DateTimeField(blank=True, null=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('resolution_notes', models.TextField(blank=True)),
                ('acknowledged_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='acknowledged_alerts', to=settings.AUTH_USER_MODEL)),
                ('prediction_result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alerts', to='dashboard_app.predictionresult')),
            ],
            options={
                'ordering': ['-alert_date', '-severity'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalPattern',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pattern_type', models.CharField(choices=[('SEASONAL', 'Seasonal Pattern'), ('WEEKLY', 'Weekly Pattern'), ('MONTHLY', 'Monthly Pattern'), ('FAILURE_SEQUENCE', 'Failure Sequence'), ('VOLUME_SPIKE', 'Volume Spike'), ('PERFORMANCE_DEGRADATION', 'Performance Degradation')], max_length=30)),
                ('job_name', models.CharField(blank=True, max_length=200)),
                ('pattern_description', models.TextField()),
                ('confidence_score', models.FloatField(help_text='How confident we are in this pattern (0-1)')),
                ('pattern_data', models.JSONField(help_text='Detailed pattern information')),
                ('occurrence_frequency', models.FloatField(help_text='How often this pattern occurs')),
                ('time_of_day', models.TimeField(blank=True, null=True)),
                ('day_of_week', models.IntegerField(blank=True, help_text='1=Monday, 7=Sunday', null=True)),
                ('day_of_month', models.IntegerField(blank=True, null=True)),
                ('month_of_year', models.IntegerField(blank=True, null=True)),
                ('discovered_at', models.DateTimeField(auto_now_add=True)),
                ('data_range_start', models.DateField()),
                ('data_range_end', models.DateField()),
                ('sample_size', models.IntegerField(help_text='Number of data points used to identify this pattern')),
                ('is_active', models.BooleanField(default=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historical_patterns', to='dashboard_app.customer')),
            ],
            options={
                'ordering': ['-confidence_score', '-discovered_at'],
                'indexes': [models.Index(fields=['customer', 'pattern_type'], name='dashboard_a_custome_6f7341_idx'), models.Index(fields=['job_name'], name='dashboard_a_job_nam_4d3e5f_idx'), models.Index(fields=['confidence_score'], name='dashboard_a_confide_8f34b2_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='predictionresult',
            index=models.Index(fields=['predicted_date', 'risk_level'], name='dashboard_a_predict_544e9f_idx'),
        ),
        migrations.AddIndex(
            model_name='predictionresult',
            index=models.Index(fields=['job_name'], name='dashboard_a_job_nam_e69057_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='predictionresult',
            unique_together={('prediction_model', 'job_name', 'predicted_date')},
        ),
        migrations.AddIndex(
            model_name='predictionalert',
            index=models.Index(fields=['status', 'severity'], name='dashboard_a_status_ab598e_idx'),
        ),
        migrations.AddIndex(
            model_name='predictionalert',
            index=models.Index(fields=['predicted_impact_date'], name='dashboard_a_predict_ad0055_idx'),
        ),
        migrations.AddIndex(
            model_name='predictionalert',
            index=models.Index(fields=['alert_date'], name='dashboard_a_alert_d_006723_idx'),
        ),
    ]
